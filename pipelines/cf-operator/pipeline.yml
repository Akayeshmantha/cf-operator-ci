resources:
- name: src
  type: git
  tags: [containerization]
  source:
    uri: ((src-repo))
    branch: master
- name: ci
  type: git
  tags: [containerization]
  source:
    uri: ((ci-repo))
    branch: ((ci-branch))
- name: docker.cf-operator-rc
  type: docker-image
  tags: [containerization]
  source:
    repository: ((docker-organization))/((docker-candidate-repo))
    username: ((dockerhub.username))
    password: ((dockerhub.password))
- name: s3.cf-operator
  type: s3
  tags: [containerization]
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: binaries/cf-operator-(.*)
- name: s3.helm-charts
  type: s3
  tags: [containerization]
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: helm-charts/cf-operator-(.*).tgz
- name: s3.build-number
  type: semver
  tags: [containerization]
  source:
    driver: s3
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    key: code-coverage/version
    initial_version: 0.0.0
- name: s3.code-coverage-unit
  type: s3
  tags: [containerization]
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: code-coverage/gover-(.*)-unit.coverprofile
- name: s3.code-coverage-integration
  type: s3
  tags: [containerization]
  source:
    access_key_id: ((s3.accessKey))
    secret_access_key: ((s3.secretKey))
    bucket: ((s3.bucketName))
    regexp: code-coverage/gover-(.*)-integration.coverprofile


jobs:
- name: test
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
  - put: s3.build-number
    tags: [containerization]
    params:
      bump: patch
  - task: vet
    tags: [containerization]
    file: ci/pipelines/tasks/vet.yml
  - task: lint
    tags: [containerization]
    file: ci/pipelines/tasks/lint.yml
  - task: test-unit
    tags: [containerization]
    file: ci/pipelines/tasks/test.yml
    params:
      COVERAGE: true
  - put: s3.code-coverage-unit
    tags: [containerization]
    params:
      file: code-coverage/gover-*-unit.coverprofile

- name: build
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      passed: [test]
      trigger: true
    - get: s3.build-number
      passed: [test]
    - get: s3.code-coverage-unit
      passed: [test]
  - task: build
    tags: [containerization]
    file: ci/pipelines/tasks/build.yml
  - do:
    - put: docker.cf-operator-rc
      params:
        build: src
        tag: docker/tag

- name: test-integration
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
      passed: [build]
    - get: s3.build-number
      passed: [build]
    - get: s3.code-coverage-unit
      passed: [build]
  - aggregate:
    - task: test-integration
      tags: [containerization]
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud.cluster))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
        OPERATOR_TEST_STORAGE_CLASS: ((storageclass))
        DOCKER_IMAGE_REPOSITORY: ((docker-candidate-repo))
        COVERAGE: true
      file: ci/pipelines/tasks/test-integration.yml
    - task: test-helm-e2e
      tags: [containerization]
      params:
        ibmcloud_apikey: ((ibmcloud.key-value))
        ibmcloud_server: ((ibmcloud.server))
        ibmcloud_region: ((ibmcloud.region))
        ibmcloud_cluster: ((ibmcloud.cluster-dino))
        ssh_server_ip: ((ssh-server.ip))
        ssh_server_user: ((ssh-server.user))
        ssh_server_key: ((ssh-server.key))
      file: ci/pipelines/tasks/test-helm-e2e.yml
  - put: s3.code-coverage-integration
    tags: [containerization]
    params:
      file: code-coverage/gover-*-integration.coverprofile

- name: coverage
  serial: true
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
      passed: [test-integration]
    - get: s3.build-number
      passed: [test-integration]
  - get: s3.code-coverage-unit
    passed: [test-integration]
  - get: s3.code-coverage-integration
    passed: [test-integration]
  - task: coverage
    tags: [containerization]
    params:
      COVERALLS_TOKEN: ((coveralls-token))
    file: ci/pipelines/cf-operator/tasks/coverage.yml


- name: publish
  plan:
  - aggregate:
    - get: ci
    - get: src
      passed: [test-integration]
      trigger: true
  - task: build
    tags: [containerization]
    file: ci/pipelines/tasks/build.yml
  - task: publish
    tags: [containerization]
    privileged: true
    file: ci/pipelines/cf-operator/tasks/publish.yml
    params:
      repository: ((docker-organization))/cf-operator
      candidate_repository: ((docker-organization))/((docker-candidate-repo))
      username: ((dockerhub.username))
      password: ((dockerhub.password))
  - put: s3.cf-operator
    tags: [containerization]
    params:
      file: binaries/cf-operator-*

- name: build-helm
  plan:
  - aggregate:
    - get: ci
    - get: src
      trigger: true
      passed: [test-integration]
  - task: build
    tags: [containerization]
    file: ci/pipelines/tasks/build-helm.yml
  - put: s3.helm-charts
    tags: [containerization]
    params:
      file: helm-charts/cf-operator-*.tgz
      acl: public-read
